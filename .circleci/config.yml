version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.7-stretch-node
        environment:
          ALLOWED_HOSTS: localhost
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          DJANGO_SETTINGS_MODULE: flare_portal.settings.production
          POETRY_VERSION: 1.1.1
          RECAPTCHA_PRIVATE_KEY: 'dummy-key-value'
          RECAPTCHA_PUBLIC_KEY: 'dummy-key-value'
          SECRET_KEY: testingsecretkey
          SECURE_SSL_REDIRECT: false
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{checksum "poetry.lock"}}
      - run:
          name: install python dependencies
          command: |
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
            . $HOME/.poetry/env
            python -m venv venv
            . ./venv/bin/activate
            poetry install
      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{checksum "poetry.lock"}}
      - run:
          name: install node dependencies
          command: |
            npm ci
      - run:
          name: Linting js
          command: |
            npm run lint:js
      - run:
          name: Linting css
          command: |
            npm run lint:css
      - run:
          name: Linting format
          command: |
            npm run lint:format
      - run:
          name: Front end tests
          command: |
            npm run test:coverage
      - run:
          name: compile static assets
          command: |
            npm run build:prod
      - run:
          name: Run Django tests
          command: |
            . venv/bin/activate
            isort --recursive --check-only --diff ./flare_portal
            ./manage.py collectstatic --clear --noinput
            ./manage.py makemigrations --check --noinput
            ./manage.py check
            ./manage.py test
      - run:
          name: Run Black
          command: |
            . venv/bin/activate
            black --check ./flare_portal
  deploy_staging:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: deploy staging to heroku
          command: |
            # To obtain a token, visit https://dashboard.heroku.com/account, add your token as an environment
            # variable in the CircleCi project settings.
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_STAGING.git master
  deploy_production:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: deploy master to heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PRODUCTION.git master
workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - deploy_staging:
          requires:
            - test
          filters:
            branches:
              only: staging
      - confirm_deploy_production:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy_production:
          requires:
            - test
            - confirm_deploy_production
          filters:
            branches:
              only: master
